{
  "hash": "e2b8dc7268110cabdbda0c461f5e0d75",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"`demo.qmd` aka Quarto Practice\"\n---\n\n\nQuarto enables you to weave together content and executable code into a finished document.\n\nThis `demo.qmd` file has an Python code chunks, Markdown-formatted text, and examples for adding images and hyperlinks.\n\nTODO: edit this file to contain the content listed below\n\n### Edit and preview a demo.qmd file\n\n1.  Edit a .qmd page (uses demo.qmd file that has markdown for text, add hyperlink, add image, run Python code)\n\n    1.   Headers\n\n        1.  Headers are powerful in Quarto because they let you organize on the side of the page. They let you share a specific section of a page by copying the URL\n\n    2.  hyperlink something (cite the Cookbook and hyperlink it)\n\n        1.  Hyperlinking is done like this; lets you cite and give credit\n\n    3.  inspect this image with alt-txt\n\n    4.  Python code\n\n        1.  manage echo, run\n\n## Task: Edit a `.qmd` page\n\nTODO: Edit down to what we need.\n\nNow let's practice Markdown and commit an edit to this file.\n\nThis file is written in Markdown, which formats text on the web. To see the Markdown that results in the following formatting, click the pencil icon to edit, or click 'Raw' to inspect it. For example, with Markdown:\n\nWe can make words **bold** or *italic*.\n\n### We can make headers.\n\nWe can make lists â€“ *note that lists need an empty line before list items!*\n\n1.  bananas\n2.  tamales\n3.  cakes\n\nWe can make hyperlinks in [Markdown](https://quarto.org/docs/authoring/markdown-basics.html) using the `[]()` pattern: you put words to hyperlink in `[]` and the URL in `()`. For example:\n\n> [This twitter thread](https://twitter.com/allison_horst/status/1287772985630191617) describes the palmerpenguins R package. Learn more on the [palmerpenguins webpage](https://allisonhorst.github.io/palmerpenguins).\n\nWe can make an indented quote block with the `>` symbol, as in the example above.\n\nWe can include an image with the same `[]()` pattern, by adding a preceding exclamation point: `![]()`. For example:\n\n[![The Openscapes logo](/images/openscapes_hex.png){fig-alt=\"Openscapes logo. A hexagonal shape with orange border, yellow background, the word openscapes in orange above a cartoon evoking a landscape of data plots\" width=\"250\"}](https://openscapes.org/)\n\n*Note how we can add alt text for the image, manage the image size, and link the image to a URL*\n\n:::{.callout-note}\nexample callout notes and their different types are so valuable\n:::\n\n\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\nYou can add options to executable code like this\n\nTODO: day before clinic, make this Python code (don't add screenshot - fewer files to for folks to get distracted with, lighter weight repo)\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n\n\nYour turn! Change or add something in Markdown and commit and push to GitHub.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}