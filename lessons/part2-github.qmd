---
title: "Part 2: Contribute via GitHub"
---

## Contribute your updates using GitHub

Now that we have each saved some changes to files in our Quarto site source, liike `.qmd`, `.ipynb`, and/or `_quarto.yml`, we can contribute our updates using GitHub.

### Basic Workflow

Here is the basic workflow for getting your proposed updates incorporated into the main site. We'll demonstrate this below, and then you can try it in breakouts.

1.  Inspect the differences your edits will introduce
2.  "Stage" your changes
3.  Commit your changes with a helpful "Commit message"
4.  "Push" to GitHub
5.  Go to the Clinic repo source on GitHub, in your browser
6.  Make a "Pull Request" and tag a reviewer
7.  Reviewer responds by commenting, making suggested commits, and submitting their review
8.  Author responds to review and "merges" their Pull Request
9.  A GitHub Action automatically publishes the updates in the live siteDiff, Stage, Commit, and Push your edits to GitHub

### Demonstration

You have to deliberately tell Git/GitHub when you have work that you want to be versioned and synced. First, inspect the differences your edits will introduce.

![](images/jupyterhub-git-diff.png){fig-align="left" width="100%"}

In the Git tab "stage" your saved changes.

![Stage your changes](images/jupyterhub-git-stage.png){fig-align="left" width="50%"}

Commit your edits with a good commit message and push your edits to GitHub. A commit message is a human-readable message, like leaving a breadcrumb trail for your future self and others.

![Commit and Push](images/jupyterhub-git-commit-push.png){fig-align="left" width="50%"}

On your first commit, you will be prompted to add your Git credentials. When you are working on a project over time, you can have them stored, following instructions in [Configure Git (git config)](https://nasa-openscapes.github.io/2021-Cloud-Hackathon/tutorials/00_Setup.html#step-5.1.-configure-git-git-config) from the 2021 Cloud Hackathon.

In the Hub, in our own branch of the Quarto Clinic repo, we have made one or more edits to the Clinic files, committed those updates, and pushed those commit(s) to GitHub. How do our suggested contributions get incorporated into the main Quarto Clinic repo and website?

### Make a Pull Request

After pushing your edits, go to <https://github.com/Openscapes/quarto-clinic/> <!--- replace with unique link to a clinic ---> and you will see a yellow banner inviting you to make a Pull Request to add your edits to the Clinic repo.

![](images/github-yellow-pr-banner.png){fig-align="left" width="90%"}

Not finished proposing your updates? You can set your Pull Request as a Draft at the start so folks can see your thinking. Set Ready for Review when ready and request a reviewer(s). For the NASA Earthdata Cloud Cookbook, any Pull Request must be reviewed before it can be merged. If you know someone who is familiar with the content you're proposing to add, request their review.

### Review a pull request

From the pull request page in GitHub browser, look at the elements of the pull request.

<!--- *TODO: add screenshot of a PR page like the one in Cookbook, pull-request-example.png* --->

-   Start with Conversation tab:
    -   We can see all commits and comments on what Andy has worked on
    -   This is where we can add PR reviewers by clicking the gear icon next to "Reviewers" at the top right corner of this tab.
-   Commit tab:
    -   More details on the commits that we saw under Conversation. When we click on one of the commits, we can see line by line what has changed under that commit (green lines are added, red lines have been removed)
-   Files Changed tab:
    -   View all the files that changed across the commits
    -   In Nav bar: Orange dot box signifies modified; Green plus box means something's been added; Red minus box means deleted; Grey arrow box means renamed.
-   Checks tab:
    -   Shows status of the Github Action that renders and deploys the site. We can know whether this Pull Request is able to be deployed.

Now, switch to the 2i2c Hub to view the Cookbook preview as it would appear if the pull request was merged:

-   Terminal:
    -   Go to the Main branch and pull so that we have the most recent changes from remote.
    -   `git checkout` to the branch that has the Pull Request
    -   `quarto preview` - this will build the book with the author's suggested edits.

In reviewing a pull request with lots of changes, it can be helpful to have windows open to view both the GitHub browser and the 2i2c Hub showing the Clinic site preview.

-   In GitHub under the "Files changed" tab of the PR, we can add a suggested edit by clicking the "plus" button below the line in question. Suggesting specific commits can speed the contributor's workflow compared with trying to describe what we'd like them to change.
-   We can click "Start a review" button so the author gets a single email when we're done reviewing, rather than getting one notification for every edit we suggest.

Review each individual file that has changed and come back to the main `_quarto.yml` if we see an issue with the navigation.

Once our review is complete, we add a note in the GitHub review box and click "Approve", "Comment" or "Request changes". In the note it can be really helpful to add a note of appreciation for some aspect of the contribution, tagging the author, saying they can merge the PR after making changes, and possibly add a summary of our requested edits including the number of changes requested. Some changes in the middle of a long list of edits can be marked as hidden conversations, so this can be helpful to the author to know they've seen everything.

### Merge your Pull Request

As the author, you can now address the reviewer's comments and then merge your Pull Request.

### Try it out!

Pair up in breakouts to make and review each other's Pull Requests

## View your updates in the live site (Regroup, 10 min)
