[
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Setup",
    "section": "",
    "text": "Go to the Hub https://openscapes.2i2c.cloud &gt; log in with your GitHub Account &gt; select the Python server.\n\n\n\nLogin page for the NASA Openscapes 2i2c JupyterHub, “the Hub”\n\n\n\n\n\nHub server options\n\n\n\nIt takes a few minutes for the Hub to load. Please be patient!\nWhile the server starts up, we’ll explore the Quarto Clinic website structure side by side with the repo.\n\n\nThis Quarto Clinic website has 4 things you can see on the left navbar:\n\nWelcome\nSetup & Explore\nLessons\nNext Steps\n\nMost of these are pages, but you’ll see that “Lessons” has an arrow &gt;; it is a folder with additional pages inside.\n\n\n\nLet’s go to this website’s GitHub repository (or “repo”). You can get there from any page in this clinic website by clicking the GitHub Octocat icon underneath the Openscapes logo in the left navbar.\n\n\n\n\n\n\nTip\n\n\n\nTo open a link in a new browser tab, hold command on Mac, or control on a PC, then click.\n\n\nHave a look at the filenames. We can recognize the names of the webpages we see (and listed above), and they have red arrows marking them in the image below. Note that most files in this repo are .qmd files. These are plain text Quarto files that can combine Markdown text with code. index.qmd is the home page. When we click inside the lessons folder we see more .qmd files and an images folder that holds images used in the pages inside the Lessons section of the site.\nTODO: replace screenshots; red arrows for lessons\n\n\n\nquarto-website-tutorial GitHub repository with files for webpages marked with red arrows",
    "crumbs": [
      "Setup"
    ]
  },
  {
    "objectID": "setup.html#setup-part-1-log-in-to-the-hub",
    "href": "setup.html#setup-part-1-log-in-to-the-hub",
    "title": "Setup",
    "section": "",
    "text": "Go to the Hub https://openscapes.2i2c.cloud &gt; log in with your GitHub Account &gt; select the Python server.\n\n\n\nLogin page for the NASA Openscapes 2i2c JupyterHub, “the Hub”\n\n\n\n\n\nHub server options\n\n\n\nIt takes a few minutes for the Hub to load. Please be patient!\nWhile the server starts up, we’ll explore the Quarto Clinic website structure side by side with the repo.\n\n\nThis Quarto Clinic website has 4 things you can see on the left navbar:\n\nWelcome\nSetup & Explore\nLessons\nNext Steps\n\nMost of these are pages, but you’ll see that “Lessons” has an arrow &gt;; it is a folder with additional pages inside.\n\n\n\nLet’s go to this website’s GitHub repository (or “repo”). You can get there from any page in this clinic website by clicking the GitHub Octocat icon underneath the Openscapes logo in the left navbar.\n\n\n\n\n\n\nTip\n\n\n\nTo open a link in a new browser tab, hold command on Mac, or control on a PC, then click.\n\n\nHave a look at the filenames. We can recognize the names of the webpages we see (and listed above), and they have red arrows marking them in the image below. Note that most files in this repo are .qmd files. These are plain text Quarto files that can combine Markdown text with code. index.qmd is the home page. When we click inside the lessons folder we see more .qmd files and an images folder that holds images used in the pages inside the Lessons section of the site.\nTODO: replace screenshots; red arrows for lessons\n\n\n\nquarto-website-tutorial GitHub repository with files for webpages marked with red arrows",
    "crumbs": [
      "Setup"
    ]
  },
  {
    "objectID": "setup.html#setup-part-2-clone-the-quarto-clinic-repo",
    "href": "setup.html#setup-part-2-clone-the-quarto-clinic-repo",
    "title": "Setup",
    "section": "Setup Part 2: Clone the Quarto Clinic repo",
    "text": "Setup Part 2: Clone the Quarto Clinic repo\nAfter our Hub server has loaded (Setup Part 1), we’ll clone the Quarto Clinic repository into the Hub.\nOption A: In the Hub, use the Git tab to Clone the repo.\n\n\n\nClone a GitHub repository in the Hub\n\n\nOption B: In the Hub, do this by opening a terminal (File &gt; New &gt; Terminal). In the Terminal, git clone your repository and cd into it:\ngit clone https://github.com/openscapes/quarto-clinic\ncd quarto-clinic\n\nAside: What is a branch?\n\n\nCreate a new branch\nWorking in a branch means you have your own version of the Quarto Clinic to edit and preview. Later, we’ll learn how to contribute your edits to the Main branch of the Clinic by making a “Pull Request” on GitHub.\nNavigate into the quarto-clinic folder (In the Terminal: cd quarto-clinic) &gt; click the Git tab &gt; New Branch, with branch name = your name, to make it easy to identify your work in the exercises that follow.\n\n\n\nCreate a branch\n\n\nIn the terminal: git checkout -b yourname\n\n\nSet up our Git credentials\nTODO: do we need to do Step 5.1. Configure Git (git config)? (but ignore the push file part). Clarify the following text to say see the orange dot. click it to be prompted\nWhen you see the following screenshot, GitHub is asking for you to input your credentials. (Note: you see this screenshot when you have committed work to push to GitHub.com. In this case we have created a new branch in the Hub and it does not yet exist on GitHub.\n\n\n\nPrompt to add your Git credentials\n\n\nWe’ll follow the instructions in the 2021 Cloud Hackathon to Setup your Personal Access Token (PAT).",
    "crumbs": [
      "Setup"
    ]
  },
  {
    "objectID": "setup.html#onward",
    "href": "setup.html#onward",
    "title": "Setup",
    "section": "Onward!",
    "text": "Onward!\nSince we have each set up our own GitHub clone with our unique branch of this Quarto Clinic website in the Hub, now we are ready to start editing! The next chapter describes how to do this in the JupyterHub.",
    "crumbs": [
      "Setup"
    ]
  },
  {
    "objectID": "next-steps.html",
    "href": "next-steps.html",
    "title": "Next Steps",
    "section": "",
    "text": "https://quarto.org/\nA video to jumpstart your Quarto journey, by Mine Çetinkaya-Rundel, May, 2023 (23 mins). This is in RStudio IDE so will look different in the Hub. Includes:\n\nInserting cross references to tables and figures\nAdding a citation from a DOI\nSeamlessly switching between output formats as well as creating multi-format documents\nCustomizing the output location of code in presentations\nCreating a website from scratch\n\nA Quarto tip a day, by Mine Çetinkaya-Rundel, July 2022\n\n\n\n\n\nReviewing a pull request (with videos), in the NASA Earthdata Cloud Cookbook\nTidyteam code review principles, recommended by Andy Teucher\nOpenscapes lesson on GitHub Strategies, the GitHub Clinic\nSetting up Git credentials under Tracking Changes, in the 2021 Cloud Hackathon",
    "crumbs": [
      "Next Steps"
    ]
  },
  {
    "objectID": "next-steps.html#where-to-get-help-and-learn-more",
    "href": "next-steps.html#where-to-get-help-and-learn-more",
    "title": "Next Steps",
    "section": "",
    "text": "https://quarto.org/\nA video to jumpstart your Quarto journey, by Mine Çetinkaya-Rundel, May, 2023 (23 mins). This is in RStudio IDE so will look different in the Hub. Includes:\n\nInserting cross references to tables and figures\nAdding a citation from a DOI\nSeamlessly switching between output formats as well as creating multi-format documents\nCustomizing the output location of code in presentations\nCreating a website from scratch\n\nA Quarto tip a day, by Mine Çetinkaya-Rundel, July 2022\n\n\n\n\n\nReviewing a pull request (with videos), in the NASA Earthdata Cloud Cookbook\nTidyteam code review principles, recommended by Andy Teucher\nOpenscapes lesson on GitHub Strategies, the GitHub Clinic\nSetting up Git credentials under Tracking Changes, in the 2021 Cloud Hackathon",
    "crumbs": [
      "Next Steps"
    ]
  },
  {
    "objectID": "next-steps.html#where-to-contribute",
    "href": "next-steps.html#where-to-contribute",
    "title": "Next Steps",
    "section": "Where to contribute",
    "text": "Where to contribute\nWe can use these skills to contribute to many Quarto websites and books.\n\nNASA Earthdata Cloud Cookbook\nNASA Openscapes\n\ne.g. add a link to your slides or recording of a presentation\n\nOpenscapes Approach Guide",
    "crumbs": [
      "Next Steps"
    ]
  },
  {
    "objectID": "next-steps.html#other-example-quarto-sites",
    "href": "next-steps.html#other-example-quarto-sites",
    "title": "Next Steps",
    "section": "Other example Quarto sites",
    "text": "Other example Quarto sites\n\n2021 NASA Cloud Hackathon\nOpenscapes Champions Lessons Series\nFaylab Lab Manual\n\nSee many more examples at the Quarto gallery!",
    "crumbs": [
      "Next Steps"
    ]
  },
  {
    "objectID": "lessons/demo.html",
    "href": "lessons/demo.html",
    "title": ".qmd file for practice",
    "section": "",
    "text": "This demo.qmd file has Markdown-formatted text, examples for adding headers, hyperlinks, and inserting images with alt-text, and a Python code chunk.\nWe can all practice Markdown in this Quarto file. Make an edit, preview how it will look in the site (quarto preview), edit, repeat.\nOnly make changes to the section below under your name header (to prevent conflicts with other people’s edits)",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#ideas-for-contributions",
    "href": "lessons/demo.html#ideas-for-contributions",
    "title": ".qmd file for practice",
    "section": "Ideas for contributions",
    "text": "Ideas for contributions\n\nHeaders\nWe can make headers using ## Name, ### Name, etc. Headers are powerful in Quarto because they let you organize your content. You can share a specific subsection of a page by copying its URL.\n\n\nHyperlinks\nWe can make hyperlinks using the []() pattern: you name the hyperlink in [] and put the URL in (). For example, here’s a link to Markdown Basics. Hyperlinking lets us cite and give credit to our sources, like the NASA Earthdata Cloud Cookbook (Barrett et al.).\n\n\nImages\nWe can include an image with the same []() pattern, by adding a preceding exclamation point: ![](). The [] contain the caption (optional) and () contain the path to the image file.\n\n\n\nThe Openscapes logo\n\n\nAdditional attributes like image size, alt text, and linking the image to a URL, are set inside {} in this example:\n\n\n\nThe Openscapes logo\n\n\n\n\nCode\nWhen you Render, a document will be generated that includes both content and the output of embedded code. You can embed code like this:\nTODO: day before clinic, make this Python code (don’t add screenshot - fewer files to for folks to get distracted with, lighter weight repo)\n\n2 * 2\n\n[1] 4\n\n\nYou can add options to executable code. The echo: false option disables the printing of code (only output is displayed).",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#stefanie",
    "href": "lessons/demo.html#stefanie",
    "title": ".qmd file for practice",
    "section": "Stefanie",
    "text": "Stefanie\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#alexis",
    "href": "lessons/demo.html#alexis",
    "title": ".qmd file for practice",
    "section": "Alexis",
    "text": "Alexis\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#andy",
    "href": "lessons/demo.html#andy",
    "title": ".qmd file for practice",
    "section": "Andy",
    "text": "Andy\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#eric",
    "href": "lessons/demo.html#eric",
    "title": ".qmd file for practice",
    "section": "Eric",
    "text": "Eric\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#guoqing",
    "href": "lessons/demo.html#guoqing",
    "title": ".qmd file for practice",
    "section": "Guoqing",
    "text": "Guoqing\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#ian",
    "href": "lessons/demo.html#ian",
    "title": ".qmd file for practice",
    "section": "Ian",
    "text": "Ian\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#jessica",
    "href": "lessons/demo.html#jessica",
    "title": ".qmd file for practice",
    "section": "Jessica",
    "text": "Jessica\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#juan",
    "href": "lessons/demo.html#juan",
    "title": ".qmd file for practice",
    "section": "Juan",
    "text": "Juan\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#julie",
    "href": "lessons/demo.html#julie",
    "title": ".qmd file for practice",
    "section": "Julie",
    "text": "Julie\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#katherine",
    "href": "lessons/demo.html#katherine",
    "title": ".qmd file for practice",
    "section": "Katherine",
    "text": "Katherine\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#kytt",
    "href": "lessons/demo.html#kytt",
    "title": ".qmd file for practice",
    "section": "Kytt",
    "text": "Kytt\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#luis",
    "href": "lessons/demo.html#luis",
    "title": ".qmd file for practice",
    "section": "Luis",
    "text": "Luis\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#michele",
    "href": "lessons/demo.html#michele",
    "title": ".qmd file for practice",
    "section": "Michele",
    "text": "Michele\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#navaneeth",
    "href": "lessons/demo.html#navaneeth",
    "title": ".qmd file for practice",
    "section": "Navaneeth",
    "text": "Navaneeth\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#rhys",
    "href": "lessons/demo.html#rhys",
    "title": ".qmd file for practice",
    "section": "Rhys",
    "text": "Rhys\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#ritika",
    "href": "lessons/demo.html#ritika",
    "title": ".qmd file for practice",
    "section": "Ritika",
    "text": "Ritika\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#rupesh",
    "href": "lessons/demo.html#rupesh",
    "title": ".qmd file for practice",
    "section": "Rupesh",
    "text": "Rupesh\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#roosevelt",
    "href": "lessons/demo.html#roosevelt",
    "title": ".qmd file for practice",
    "section": "Roosevelt",
    "text": "Roosevelt\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/demo.html#scott",
    "href": "lessons/demo.html#scott",
    "title": ".qmd file for practice",
    "section": "Scott",
    "text": "Scott\nFor your first edit, you could fix this tpyo and preview how it will look in the site.",
    "crumbs": [
      "Lessons",
      "`.qmd` file for practice"
    ]
  },
  {
    "objectID": "lessons/part1-quarto.html",
    "href": "lessons/part1-quarto.html",
    "title": "Part 1: Quarto workflow",
    "section": "",
    "text": "Preview the website (quarto preview)\nMake changes to files\nSave and preview how changes are automatically updated!",
    "crumbs": [
      "Lessons",
      "Part 1: Quarto workflow"
    ]
  },
  {
    "objectID": "lessons/part1-quarto.html#workflow-to-edit-a-quarto-website-source",
    "href": "lessons/part1-quarto.html#workflow-to-edit-a-quarto-website-source",
    "title": "Part 1: Quarto workflow",
    "section": "",
    "text": "Preview the website (quarto preview)\nMake changes to files\nSave and preview how changes are automatically updated!",
    "crumbs": [
      "Lessons",
      "Part 1: Quarto workflow"
    ]
  },
  {
    "objectID": "lessons/part1-quarto.html#demo-edit-and-preview-a-demo.qmd-file",
    "href": "lessons/part1-quarto.html#demo-edit-and-preview-a-demo.qmd-file",
    "title": "Part 1: Quarto workflow",
    "section": "Demo: Edit and preview a demo.qmd file",
    "text": "Demo: Edit and preview a demo.qmd file\nI will demonstrate this with the demo.qmd file: watch me and then you will all have a chance to do this yourself.\n\nPreview the website (aka Quarto preview)\nLet’s start off by previewing our quarto site locally. In Terminal, in the quarto-clinic folder, type quarto preview, which will provide a URL with a preview of our site!\nquarto preview\n# Preparing to preview\n# Watching files for changes\n# Browse at https://openscapes.2i2c.cloud/user/jules32/proxy/4593/\nOpen this URL in a browser window and arrange your Hub and website preview windows so you can see them both. I make a bit more space in Jupyter by collapsing the left file menu by clicking on the file icon at the top of the left sidebar.",
    "crumbs": [
      "Lessons",
      "Part 1: Quarto workflow"
    ]
  },
  {
    "objectID": "lessons/part1-quarto.html#make-changes-to-files-aka-the-website-content",
    "href": "lessons/part1-quarto.html#make-changes-to-files-aka-the-website-content",
    "title": "Part 1: Quarto workflow",
    "section": "Make changes to files (aka the website content)",
    "text": "Make changes to files (aka the website content)\nOpen lessons/demo.qmd file using the Editor, not as a Notebook file. Suggestions for things to try, and how to format things are in the file.\n\n\n\nOpen .qmd file with the Editor\n\n\nI will fix a small typo.\n\nSave and preview automagically updates!\nWhen we save changes, our preview window will refresh automatically and display our changes! If it does not, you can also refresh the page manually.\nThis is powerful to be able to see live changes in the preview as we edit in our .qmd files.",
    "crumbs": [
      "Lessons",
      "Part 1: Quarto workflow"
    ]
  },
  {
    "objectID": "lessons/part1-quarto.html#your-turn",
    "href": "lessons/part1-quarto.html#your-turn",
    "title": "Part 1: Quarto workflow",
    "section": "Your turn",
    "text": "Your turn\nIn your breakout room:\n\nIn terminal, cd quarto-clinic and then quarto preview\nOpen demo.qmd file\nFind the header with your name, edit in that section. Ideas at the top of the file.\nSave, quarto preview\nRepeat!",
    "crumbs": [
      "Lessons",
      "Part 1: Quarto workflow"
    ]
  },
  {
    "objectID": "lessons/part1-quarto.html#regroup-discussion-topics",
    "href": "lessons/part1-quarto.html#regroup-discussion-topics",
    "title": "Part 1: Quarto workflow",
    "section": "Regroup discussion topics",
    "text": "Regroup discussion topics\n\nWhen adding new files, update _quarto.yml file as needed to have new content appear in the site’s nav bar. (see https://openscapes.github.io/quarto-website-tutorial/explore.html)",
    "crumbs": [
      "Lessons",
      "Part 1: Quarto workflow"
    ]
  },
  {
    "objectID": "lessons/part2-github.html",
    "href": "lessons/part2-github.html",
    "title": "Part 2: GitHub workflow",
    "section": "",
    "text": "Inspect the differences your edits will introduce\n“Stage” your changes\nCommit your changes with a helpful “Commit message”\n“Push” to GitHub\nGo to the Clinic repo source on GitHub, in your browser\nMake a “Pull Request” and tag a reviewer\nReviewer responds by commenting, making suggested commits, and submitting their review\nAuthor responds to review and “merges” their Pull Request\nA GitHub Action automatically publishes the updates in the live siteDiff, Stage, Commit, and Push your edits to GitHub",
    "crumbs": [
      "Lessons",
      "Part 2: GitHub workflow"
    ]
  },
  {
    "objectID": "lessons/part2-github.html#workflow-to-contribute-via-github",
    "href": "lessons/part2-github.html#workflow-to-contribute-via-github",
    "title": "Part 2: GitHub workflow",
    "section": "",
    "text": "Inspect the differences your edits will introduce\n“Stage” your changes\nCommit your changes with a helpful “Commit message”\n“Push” to GitHub\nGo to the Clinic repo source on GitHub, in your browser\nMake a “Pull Request” and tag a reviewer\nReviewer responds by commenting, making suggested commits, and submitting their review\nAuthor responds to review and “merges” their Pull Request\nA GitHub Action automatically publishes the updates in the live siteDiff, Stage, Commit, and Push your edits to GitHub",
    "crumbs": [
      "Lessons",
      "Part 2: GitHub workflow"
    ]
  },
  {
    "objectID": "lessons/part2-github.html#contribute-your-updates-using-github",
    "href": "lessons/part2-github.html#contribute-your-updates-using-github",
    "title": "Part 2: GitHub workflow",
    "section": "Contribute your updates using GitHub",
    "text": "Contribute your updates using GitHub\nNow that we have each saved some changes to files in our Quarto site source, liike .qmd, .ipynb, and/or _quarto.yml, we can contribute our updates using GitHub.\n\nDemonstration\nYou have to deliberately tell Git/GitHub when you have work that you want to be versioned and synced. First, inspect the differences your edits will introduce.\n\n\n\n\n\nIn the Git tab “stage” your saved changes.\n\n\n\nStage your changes\n\n\nCommit your edits with a good commit message and push your edits to GitHub. A commit message is a human-readable message, like leaving a breadcrumb trail for your future self and others.\n\n\n\nCommit and Push\n\n\nOn your first commit, you will be prompted to add your Git credentials. When you are working on a project over time, you can have them stored, following instructions in Configure Git (git config) from the 2021 Cloud Hackathon.\nIn the Hub, in our own branch of the Quarto Clinic repo, we have made one or more edits to the Clinic files, committed those updates, and pushed those commit(s) to GitHub. How do our suggested contributions get incorporated into the main Quarto Clinic repo and website?\n\n\nMake a Pull Request\nAfter pushing your edits, go to https://github.com/Openscapes/quarto-clinic/  and you will see a yellow banner inviting you to make a Pull Request to add your edits to the Clinic repo.\n\n\n\n\n\nNot finished proposing your updates? You can set your Pull Request as a Draft at the start so folks can see your thinking. Set Ready for Review when ready and request a reviewer(s). For the NASA Earthdata Cloud Cookbook, any Pull Request must be reviewed before it can be merged. If you know someone who is familiar with the content you’re proposing to add, request their review.\n\n\nReview a pull request\nFrom the pull request page in GitHub browser, look at the elements of the pull request.\n\n\nStart with Conversation tab:\n\nWe can see all commits and comments on what Andy has worked on\nThis is where we can add PR reviewers by clicking the gear icon next to “Reviewers” at the top right corner of this tab.\n\nCommit tab:\n\nMore details on the commits that we saw under Conversation. When we click on one of the commits, we can see line by line what has changed under that commit (green lines are added, red lines have been removed)\n\nFiles Changed tab:\n\nView all the files that changed across the commits\nIn Nav bar: Orange dot box signifies modified; Green plus box means something’s been added; Red minus box means deleted; Grey arrow box means renamed.\n\nChecks tab:\n\nShows status of the Github Action that renders and deploys the site. We can know whether this Pull Request is able to be deployed.\n\n\nNow, switch to the 2i2c Hub to view the Cookbook preview as it would appear if the pull request was merged:\n\nTerminal:\n\nGo to the Main branch and pull so that we have the most recent changes from remote.\ngit checkout to the branch that has the Pull Request\nquarto preview - this will build the book with the author’s suggested edits.\n\n\nIn reviewing a pull request with lots of changes, it can be helpful to have windows open to view both the GitHub browser and the 2i2c Hub showing the Clinic site preview.\n\nIn GitHub under the “Files changed” tab of the PR, we can add a suggested edit by clicking the “plus” button below the line in question. Suggesting specific commits can speed the contributor’s workflow compared with trying to describe what we’d like them to change.\nWe can click “Start a review” button so the author gets a single email when we’re done reviewing, rather than getting one notification for every edit we suggest.\n\nReview each individual file that has changed and come back to the main _quarto.yml if we see an issue with the navigation.\nOnce our review is complete, we add a note in the GitHub review box and click “Approve”, “Comment” or “Request changes”. In the note it can be really helpful to add a note of appreciation for some aspect of the contribution, tagging the author, saying they can merge the PR after making changes, and possibly add a summary of our requested edits including the number of changes requested. Some changes in the middle of a long list of edits can be marked as hidden conversations, so this can be helpful to the author to know they’ve seen everything.\n\n\nMerge your Pull Request\nAs the author, you can now address the reviewer’s comments and then merge your Pull Request.\n\n\nTry it out!\nPair up in breakouts to make and review each other’s Pull Requests",
    "crumbs": [
      "Lessons",
      "Part 2: GitHub workflow"
    ]
  },
  {
    "objectID": "lessons/part2-github.html#view-your-updates-in-the-live-site-regroup-10-min",
    "href": "lessons/part2-github.html#view-your-updates-in-the-live-site-regroup-10-min",
    "title": "Part 2: GitHub workflow",
    "section": "View your updates in the live site (Regroup, 10 min)",
    "text": "View your updates in the live site (Regroup, 10 min)",
    "crumbs": [
      "Lessons",
      "Part 2: GitHub workflow"
    ]
  },
  {
    "objectID": "lessons/part2-github.html#regroup-discussion-topics",
    "href": "lessons/part2-github.html#regroup-discussion-topics",
    "title": "Part 2: GitHub workflow",
    "section": "Regroup discussion topics",
    "text": "Regroup discussion topics\nShort message: commit the freeze folder.\n\nFreeze directory contains the results of code execution.\nCommit the freeze directory after you run quarto preview.\nIf there are merge conflicts when you submit to NASA Openscapes Cookbook, maintainers will help resolve them.",
    "crumbs": [
      "Lessons",
      "Part 2: GitHub workflow"
    ]
  },
  {
    "objectID": "lessons/index.html",
    "href": "lessons/index.html",
    "title": "Practice",
    "section": "",
    "text": "In this section we’ll practice two workflows: Part 1: Edit a Quarto site, and Part 2: Contribute via GitHub. We include a basic workflow for each here, so you can come back to these for a reminder.",
    "crumbs": [
      "Lessons"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto + GitHub Clinic",
    "section": "",
    "text": "This book is an example of a Quarto website that is published via GitHub - these are powerful workflows to create and share your work.\nQuarto lets us build websites as a collection of files (.qmd, .ipynb, .rmd and others). Today we’ll focus on .qmd files, which are plain-text files that work nicely with GitHub workflows.\nQuarto enables us to collaborate on documentation and tutorials - across Python and R languages and varied levels of coding expertise. Importantly, it lets us write and share documentation/tutorials using the same tools we teach research teams for reproducible science.\nThe ability for Quarto to streamline collaboration has been so cool and important for our NASA Openscapes project, so this tutorial will enable you to contribute to that site as well as the NASA Earthdata Cloud Cookbook (both made with Quarto+GitHub.)",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Quarto + GitHub Clinic",
    "section": "",
    "text": "This book is an example of a Quarto website that is published via GitHub - these are powerful workflows to create and share your work.\nQuarto lets us build websites as a collection of files (.qmd, .ipynb, .rmd and others). Today we’ll focus on .qmd files, which are plain-text files that work nicely with GitHub workflows.\nQuarto enables us to collaborate on documentation and tutorials - across Python and R languages and varied levels of coding expertise. Importantly, it lets us write and share documentation/tutorials using the same tools we teach research teams for reproducible science.\nThe ability for Quarto to streamline collaboration has been so cool and important for our NASA Openscapes project, so this tutorial will enable you to contribute to that site as well as the NASA Earthdata Cloud Cookbook (both made with Quarto+GitHub.)",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#our-plan-today",
    "href": "index.html#our-plan-today",
    "title": "Quarto + GitHub Clinic",
    "section": "Our Plan today",
    "text": "Our Plan today\nWe will learn workflows with Quarto and GitHub for contributing to open source documentation. We’ll cover contributing in 2 parts:\nPart 1. Quarto Workflow: Use the 2i2c Openscapes JupyterHub as an editor: we will contribute to this Quarto site by editing a .qmd file and previewing the changes.\nPart 2. GitHub Workflow: Clone the repository for this site, make a branch to work in, commit and push your edits to GitHub, make a pull request, review and merge a pull request, and communicate what you’re doing at each step.\nThis requires some setup. We’ll do this first, and discuss more as we go.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "Quarto + GitHub Clinic",
    "section": "Prerequisites",
    "text": "Prerequisites\nTo begin, you should have a GitHub account with access to the 2i2c Openscapes JupyterHub.",
    "crumbs": [
      "Welcome"
    ]
  }
]